# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ../gtest/googletest

# Points to the location of the Google Test libraries
GTEST_LIB_DIR = .

# Where to find user code.
USER_DIR = ../src

USER_HEADER_DIR = ../include

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

CFLAGS = -fPIC -std=c99 -O3 -msse4.2 -mpclmul -march=native -funroll-loops -Wstrict-overflow -Wstrict-aliasing -Wall -Wextra -pedantic -Wshadow

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread -std=c++11

# Google Test libraries
GTEST_LIBS = libgtest.a libgtest_main.a

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
UTILITY_TEST = ./bin/utility_test

FPTREE_TEST = ./bin/fptree_test

TESTS = $(UTILITY_TEST) $(FPTREE_TEST)

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

BIN = bin

USER_HEADERS = ../include/*.h

all : $(GTEST_LIBS) $(TESTS)

clean :
	@-rm -f $(GTEST_LIBS) $(TESTS) *.o ../data/*
	-sudo umount /dev/pmem0
	@-rm -rf bin
cleano :
	@-rm -f $(GTEST_LIBS) *.o

cleand : 
	@-rm -f ../data/*

.PHONY:mount  
mount :
	@mkdir -p bin/data
	-sudo umount /dev/pmem0
	#mount NVM to the data directory
	sudo mkfs.ext4 /dev/pmem0
	sudo mount -o dax /dev/pmem0 ./bin/data
	sudo chmod -R 0777 ./bin/data
# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	@$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	@$(CXX) $(CPPFLAGS) -I$(GTEST_DIR)/include $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

libgtest.a : gtest-all.o
	@$(AR) $(ARFLAGS) $@ $^

libgtest_main.a : gtest-all.o gtest_main.o
	@$(AR) $(ARFLAGS) $@ $^

# ===============================TODO: all below=================================
fptree.o :
	@$(CXX) $(CXXFLAGS) -c $(USER_DIR)/fptree.cpp -I$(USER_HEADER_DIR) -o fptree.o -lpmem
utility.o : 
	@$(CXX) $(CXXFLAGS) -c $(USER_DIR)/utility.cpp -I$(USER_HEADER_DIR) -o utility.o -lpmem
p_allocator.o :
	@$(CXX) $(CXXFLAGS) -c $(USER_DIR)/p_allocator.cpp -I$(USER_HEADER_DIR) -o p_allocator.o -lpmem
clhash.o : $(USER_DIR)/clhash.c $(USER_HEADER_DIR)/utility/clhash.h
	@$(CC) $(CFLAGS) -c $(USER_DIR)/clhash.c -I $(USER_HEADER_DIR)

# utility test
$(UTILITY_TEST) : gtest-all.o gtest_main.o $(GTEST_LIBS) utility_test.o $(BIN) p_allocator.o utility.o clhash.o mount
	@g++ -I${GTEST_DIR}/include utility_test.o  p_allocator.o utility.o clhash.o libgtest.a libgtest_main.a -o  $@ -lpthread -lpmem
utility_test.o :
	@$(CXX) $(CXXFLAGS) -w -I$(GTEST_DIR)/include -I$(USER_HEADER_DIR) -c utility_test.cpp -lpmem
# fptree test
$(FPTREE_TEST) : gtest-all.o gtest_main.o $(GTEST_LIBS) fptree_test.o $(BIN) p_allocator.o utility.o clhash.o fptree.o mount
	@g++ -I${GTEST_DIR}/include fptree_test.o  p_allocator.o utility.o clhash.o fptree.o libgtest.a libgtest_main.a -o  $@ -lpthread -lpmem
	@rm -f *.o *.a

fptree_test.o :
	@$(CXX) $(CXXFLAGS) -w -I$(GTEST_DIR)/include -I$(USER_HEADER_DIR) -c fptree_test.cpp -lpmem
$(BIN):
	@mkdir -p bin
